datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model User {
  id                    String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at            DateTime       @default(now())
  updated_at            DateTime       @default(now()) @updatedAt
  auth0_sub             String
  created_rules         Rule[]
  created_organizations Organization[]
  created_locations     Location[]
}

model Rule {
  id                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at         DateTime @default(now())
  created_by_user    User     @relation(fields: [created_by_user_id], references: [id])
  created_by_user_id String   @db.Uuid
  updated_at         DateTime @default(now()) @updatedAt
  name               String
  content            String
  is_public          Boolean  @default(true)
  is_published       Boolean  @default(false)
}

model Organization {
  id                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at         DateTime @default(now())
  created_by_user    User     @relation(fields: [created_by_user_id], references: [id])
  created_by_user_id String   @db.Uuid
  updated_at         DateTime @default(now()) @updatedAt
  name               String
  is_public          Boolean  @default(true)
}

model Location {
  id                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at         DateTime @default(now())
  created_by_user    User     @relation(fields: [created_by_user_id], references: [id])
  created_by_user_id String   @db.Uuid
  updated_at         DateTime @default(now()) @updatedAt
  name               String
  is_public          Boolean  @default(true)
}
